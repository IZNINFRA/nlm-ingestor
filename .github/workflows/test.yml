name: Test
on:
  pull_request:
    paths:
      - "**"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      # Caching Python dependencies
      - name: Cache pip dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            v2-${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      # Cache Tika Server
      - name: Cache Tika Server
        uses: actions/cache@v2
        with:
          path: jars
          key: ${{ runner.os }}-tika-server-2.9.2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.create false --local
          poetry install --with dev
          make download_nltk_data

      - name: Run regular tests
        run: |
          set +e  # Don't exit on error
          pkill -f "tika" > /dev/null 2>&1  # Suppress output and errors
          set -e  # Resume exit on error
          poetry run pytest tests/ --ignore=tests/ingestors/test_pdf_ingestor.py
  
      - name: Run PDF ingestor tests with Tika
        run: |
          set +e
          pkill -f "tika" > /dev/null 2>&1
          set -e
          make test-pdf-ingestor

      - name: Run all tests with Tika
        run: |
          set +e
          pkill -f "tika" > /dev/null 2>&1
          set -e
          poetry run pytest tests/