name: Test
on:
  pull_request:
    paths:
      - "**"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      # Caching Python dependencies
      - name: Cache pip dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      # Cache Tika Server
      - name: Cache Tika Server
        uses: actions/cache@v2
        with:
          path: jars
          key: ${{ runner.os }}-tika-server-2.9.2

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential python3-dev

      - name: Export Poetry dependencies to requirements.txt
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install poetry
          poetry export -f requirements.txt --without-hashes -o requirements.txt

      - name: Install Python dependencies with pip
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      - name: Download NLTK data
        run: |
          python -c "import nltk; nltk.download('punkt'); nltk.download('stopwords')"

      - name: Run regular tests
        run: |
          pkill -f "tika" > /dev/null 2>&1 || true
          pytest tests/

      - name: Run PDF ingestor tests with Tika
        run: |
          # Clean up any existing Tika processes
          pkill -f "tika" > /dev/null 2>&1 || true
          rm -f .tika.pid tika.log

          # Run tests and capture all output
          make test-pdf-ingestor 2>&1 | tee test-output.log || {
            echo "=== Tika Server Logs ==="
            cat tika.log || true
            echo "